<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:s="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd"
	default-lazy-init="true">

	<description>SpringSecurity安全配置</description>
	<!-- http安全配置 -->
	<s:http auto-config="false" use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint">
		<s:intercept-url pattern="/user/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<s:intercept-url pattern="/order/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<s:intercept-url pattern="/login/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<s:intercept-url pattern="/menu/*" access="hasAnyRole('ROLE_ADMIN')"/>
		<s:intercept-url pattern="/role/*" access="hasAnyRole('ROLE_ADMIN')"/>
		<s:intercept-url pattern="/f/*" access="hasAnyRole('ROLE_ADMIN')"/>
		<!-- 后台模块 -->
		<s:intercept-url pattern="/web/system/fortune/*.jsp" access="hasAnyRole('ROLE_ADMIN')"/>
		<s:intercept-url pattern="/web/system/menu/*.jsp" access="hasAnyRole('ROLE_ADMIN')"/>
		<s:intercept-url pattern="/web/system/role/*.jsp" access="hasAnyRole('ROLE_ADMIN')"/>
		<s:intercept-url pattern="/web/system/user/*.jsp" access="hasAnyRole('ROLE_ADMIN')"/>
		<!-- 前台模块 -->
		<s:intercept-url pattern="/web/customer/*.jsp" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
		<s:intercept-url pattern="/web/system/login/*.jsp" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
		<s:intercept-url pattern="/web/order/*.jsp" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
		
		<s:intercept-url pattern="/web/system/druid/*.html	" access="hasAnyRole('ROLE_ADMIN')"/>
		
		<s:custom-filter position="FORM_LOGIN_FILTER" ref="activeAuthenticationFilter" /><!--个人用户的登录的过滤器 -->
		<s:logout logout-url="/logout" logout-success-url="/" invalidate-session="true"/>
		<s:csrf disabled="true"/>
	</s:http>
	<!-- 个人用户 -->
	<bean id="activeAuthenticationFilter" class="cn.com.cs.core.security.MyUsernamePasswordAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationSuccessHandler" ref="successHandler"></property>
		<property name="filterProcessesUrl" value="/j_spring_security_check"/>
		<property name="defaultFailureUrl" value="/login/failed" />
	</bean>

	<!--个人用户 -->
	<bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/login/succ" />
		<!-- 登录成功，不跳转默认地址 -->
		<property name="alwaysUseDefaultTargetUrl" value="false" />
	</bean>

<!-- 自定义登录失败事件，废弃 -->
<!-- 	登录失败 -->
<!-- 	<bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"> -->
<!-- 		<property name="defaultFailureUrl" value="/login/failed" /> -->
<!-- 		<property name="forwardToDestination" value="true"/> -->
<!-- 	</bean> -->
<!-- 自定义登录失败事件，废弃 -->

 	<s:authentication-manager alias="authenticationManager">
		<s:authentication-provider user-service-ref="myUserDetailsService">
			<s:password-encoder ref="md5"/>
		</s:authentication-provider>
	</s:authentication-manager>
	
	<bean id="myUserDetailsService" class="cn.com.cs.core.security.MyUserDetailsService"></bean>
	
<!-- 	<bean id="authenticationProvider" class="cn.com.cs.core.security.AuthenticationProvider"/> -->
	<bean id="md5" class="cn.com.cs.core.security.MD5CapitalPasswordEncoder" />
	
	<!-- 未登录的切入点 -->
	<bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<constructor-arg value="/"/>
	</bean>
</beans>
